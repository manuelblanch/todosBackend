{
    "name": "Request",
    "line": 7320,
    "short_desc": "",
    "long_desc": "",
    "hint": null,
    "tags": [],
    "namespace": "",
    "file": "\/home\/manuel\/code\/todosBackend\/todosBackendApiDocs\/..\/todosBackendApiDocs\/todosBackend\/_ide_helper.php",
    "relative_file": null,
    "hash": "90a790a179bdf2ce4bef2b915e9e4bcb16bd1f7a",
    "parent": "Illuminate\\Support\\Facades\\Request",
    "modifiers": "Stmt_Class",
    "is_trait": false,
    "is_interface": false,
    "aliases": [],
    "errors": [],
    "interfaces": [],
    "traits": [],
    "properties": [],
    "methods": {
        "capture": {
            "name": "capture",
            "line": 7328,
            "short_desc": "Create a new Illuminate HTTP request from server variables.",
            "long_desc": "",
            "hint": [
                [
                    "Request",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "instance": {
            "name": "instance",
            "line": 7338,
            "short_desc": "Return the Request instance.",
            "long_desc": "",
            "hint": [
                [
                    "\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "method": {
            "name": "method",
            "line": 7348,
            "short_desc": "Get the request method.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "root": {
            "name": "root",
            "line": 7358,
            "short_desc": "Get the root URL for the application.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "url": {
            "name": "url",
            "line": 7368,
            "short_desc": "Get the URL (no query string) for the request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "fullUrl": {
            "name": "fullUrl",
            "line": 7378,
            "short_desc": "Get the full URL for the request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "fullUrlWithQuery": {
            "name": "fullUrlWithQuery",
            "line": 7389,
            "short_desc": "Get the full URL for the request with the added query string parameters.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "query": {
                    "name": "query",
                    "line": 7389,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "path": {
            "name": "path",
            "line": 7399,
            "short_desc": "Get the current path info for the request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "decodedPath": {
            "name": "decodedPath",
            "line": 7409,
            "short_desc": "Get the current encoded path info for the request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "segment": {
            "name": "segment",
            "line": 7421,
            "short_desc": "Get a segment from the URI (1 based index).",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "index": {
                    "name": "index",
                    "line": 7421,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 7421,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "segments": {
            "name": "segments",
            "line": 7431,
            "short_desc": "Get all of the segments for the request path.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "is": {
            "name": "is",
            "line": 7441,
            "short_desc": "Determine if the current request URI matches a pattern.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "fullUrlIs": {
            "name": "fullUrlIs",
            "line": 7451,
            "short_desc": "Determine if the current request URL and query string matches a pattern.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "ajax": {
            "name": "ajax",
            "line": 7461,
            "short_desc": "Determine if the request is the result of an AJAX call.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "pjax": {
            "name": "pjax",
            "line": 7471,
            "short_desc": "Determine if the request is the result of an PJAX call.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "secure": {
            "name": "secure",
            "line": 7481,
            "short_desc": "Determine if the request is over HTTPS.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "ip": {
            "name": "ip",
            "line": 7491,
            "short_desc": "Returns the client IP address.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "ips": {
            "name": "ips",
            "line": 7501,
            "short_desc": "Returns the client IP addresses.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "exists": {
            "name": "exists",
            "line": 7512,
            "short_desc": "Determine if the request contains a given input item key.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7512,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "has": {
            "name": "has",
            "line": 7523,
            "short_desc": "Determine if the request contains a non-empty value for an input item.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7523,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "all": {
            "name": "all",
            "line": 7533,
            "short_desc": "Get all of the input and files for the request.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "input": {
            "name": "input",
            "line": 7545,
            "short_desc": "Retrieve an input item from the request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7545,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 7545,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ],
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "only": {
            "name": "only",
            "line": 7556,
            "short_desc": "Get a subset containing the provided keys with values from the input data.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 7556,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ],
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "except": {
            "name": "except",
            "line": 7567,
            "short_desc": "Get all of the input except for a specified array of items.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 7567,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ],
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "intersect": {
            "name": "intersect",
            "line": 7578,
            "short_desc": "Intersect an array of items with the input data.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 7578,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ],
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "query": {
            "name": "query",
            "line": 7590,
            "short_desc": "Retrieve a query string item from the request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7590,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 7590,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ],
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "hasCookie": {
            "name": "hasCookie",
            "line": 7601,
            "short_desc": "Determine if a cookie is set on the request.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7601,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "cookie": {
            "name": "cookie",
            "line": 7613,
            "short_desc": "Retrieve a cookie from the request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7613,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 7613,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ],
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "allFiles": {
            "name": "allFiles",
            "line": 7623,
            "short_desc": "Get an array of all of the files on the request.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "file": {
            "name": "file",
            "line": 7635,
            "short_desc": "Retrieve a file from the request.",
            "long_desc": "",
            "hint": [
                [
                    "\\Illuminate\\Http\\UploadedFile",
                    false
                ],
                [
                    "array",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7635,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 7635,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "hasFile": {
            "name": "hasFile",
            "line": 7646,
            "short_desc": "Determine if the uploaded data contains a file.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7646,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "hasHeader": {
            "name": "hasHeader",
            "line": 7657,
            "short_desc": "Determine if a header is set on the request.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7657,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "header": {
            "name": "header",
            "line": 7669,
            "short_desc": "Retrieve a header from the request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7669,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 7669,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ],
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "server": {
            "name": "server",
            "line": 7681,
            "short_desc": "Retrieve a server variable from the request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7681,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 7681,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ],
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "old": {
            "name": "old",
            "line": 7693,
            "short_desc": "Retrieve an old input item.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7693,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 7693,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ],
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "flash": {
            "name": "flash",
            "line": 7705,
            "short_desc": "Flash the input for the current request to the session.",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "filter": {
                    "name": "filter",
                    "line": 7705,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "keys": {
                    "name": "keys",
                    "line": 7705,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                }
            }
        },
        "flashOnly": {
            "name": "flashOnly",
            "line": 7716,
            "short_desc": "Flash only some of the input to the session.",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 7716,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ],
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "flashExcept": {
            "name": "flashExcept",
            "line": 7727,
            "short_desc": "Flash only some of the input to the session.",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "keys": {
                    "name": "keys",
                    "line": 7727,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ],
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "flush": {
            "name": "flush",
            "line": 7737,
            "short_desc": "Flush all of the old input from the session.",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "merge": {
            "name": "merge",
            "line": 7748,
            "short_desc": "Merge new input into the current request's input array.",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "input": {
                    "name": "input",
                    "line": 7748,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "replace": {
            "name": "replace",
            "line": 7759,
            "short_desc": "Replace the input for the current request.",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "input": {
                    "name": "input",
                    "line": 7759,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "json": {
            "name": "json",
            "line": 7771,
            "short_desc": "Get the JSON payload for the request.",
            "long_desc": "",
            "hint": [
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 7771,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 7771,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "matchesType": {
            "name": "matchesType",
            "line": 7783,
            "short_desc": "Determine if the given content types match.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "actual": {
                    "name": "actual",
                    "line": 7783,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "type": {
                    "name": "type",
                    "line": 7783,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "isJson": {
            "name": "isJson",
            "line": 7793,
            "short_desc": "Determine if the request is sending JSON.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "expectsJson": {
            "name": "expectsJson",
            "line": 7803,
            "short_desc": "Determine if the current request probably expects a JSON response.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "wantsJson": {
            "name": "wantsJson",
            "line": 7813,
            "short_desc": "Determine if the current request is asking for JSON in return.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "accepts": {
            "name": "accepts",
            "line": 7824,
            "short_desc": "Determines whether the current requests accepts a given content type.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "contentTypes": {
                    "name": "contentTypes",
                    "line": 7824,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "prefers": {
            "name": "prefers",
            "line": 7835,
            "short_desc": "Return the most suitable content type from the given array based on content negotiation.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "contentTypes": {
                    "name": "contentTypes",
                    "line": 7835,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "acceptsJson": {
            "name": "acceptsJson",
            "line": 7845,
            "short_desc": "Determines whether a request accepts JSON.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "acceptsHtml": {
            "name": "acceptsHtml",
            "line": 7855,
            "short_desc": "Determines whether a request accepts HTML.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "format": {
            "name": "format",
            "line": 7866,
            "short_desc": "Get the data format expected in the response.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "default": {
                    "name": "default",
                    "line": 7866,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "'html'",
                    "is_by_ref": false
                }
            }
        },
        "bearerToken": {
            "name": "bearerToken",
            "line": 7876,
            "short_desc": "Get the bearer token from the request headers.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "createFromBase": {
            "name": "createFromBase",
            "line": 7887,
            "short_desc": "Create an Illuminate request from a Symfony instance.",
            "long_desc": "",
            "hint": [
                [
                    "\\Illuminate\\Http\\Request",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "request": {
                    "name": "request",
                    "line": 7887,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Symfony\\Component\\HttpFoundation\\Request",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "duplicate": {
            "name": "duplicate",
            "line": 7903,
            "short_desc": "Clones a request and overrides some of its parameters.",
            "long_desc": "",
            "hint": [
                [
                    "\\Request",
                    false
                ]
            ],
            "hint_desc": "The duplicated request",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "query": {
                    "name": "query",
                    "line": 7903,
                    "short_desc": "The GET parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "request": {
                    "name": "request",
                    "line": 7903,
                    "short_desc": "The POST parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "attributes": {
                    "name": "attributes",
                    "line": 7903,
                    "short_desc": "The request attributes (parameters parsed from the PATH_INFO, ...)",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "cookies": {
                    "name": "cookies",
                    "line": 7903,
                    "short_desc": "The COOKIE parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "files": {
                    "name": "files",
                    "line": 7903,
                    "short_desc": "The FILES parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                },
                "server": {
                    "name": "server",
                    "line": 7903,
                    "short_desc": "The SERVER parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "session": {
            "name": "session",
            "line": 7914,
            "short_desc": "Get the session associated with the request.",
            "long_desc": "",
            "hint": [
                [
                    "\\Illuminate\\Session\\Store",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\RuntimeException",
                    ""
                ]
            ],
            "errors": [],
            "parameters": []
        },
        "user": {
            "name": "user",
            "line": 7925,
            "short_desc": "Get the user making the request.",
            "long_desc": "",
            "hint": [
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "guard": {
                    "name": "guard",
                    "line": 7925,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "route": {
            "name": "route",
            "line": 7936,
            "short_desc": "Get the route handling the request.",
            "long_desc": "",
            "hint": [
                [
                    "\\Illuminate\\Routing\\Route",
                    false
                ],
                [
                    "object",
                    false
                ],
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "param": {
                    "name": "param",
                    "line": 7936,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "fingerprint": {
            "name": "fingerprint",
            "line": 7947,
            "short_desc": "Get a unique fingerprint for the request \/ route \/ IP address.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\RuntimeException",
                    ""
                ]
            ],
            "errors": [],
            "parameters": []
        },
        "getUserResolver": {
            "name": "getUserResolver",
            "line": 7957,
            "short_desc": "Get the user resolver callback.",
            "long_desc": "",
            "hint": [
                [
                    "\\Closure",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "setUserResolver": {
            "name": "setUserResolver",
            "line": 7968,
            "short_desc": "Set the user resolver callback.",
            "long_desc": "",
            "hint": [
                [
                    "\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "callback": {
                    "name": "callback",
                    "line": 7968,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Closure",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getRouteResolver": {
            "name": "getRouteResolver",
            "line": 7978,
            "short_desc": "Get the route resolver callback.",
            "long_desc": "",
            "hint": [
                [
                    "\\Closure",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "setRouteResolver": {
            "name": "setRouteResolver",
            "line": 7989,
            "short_desc": "Set the route resolver callback.",
            "long_desc": "",
            "hint": [
                [
                    "\\$this",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "callback": {
                    "name": "callback",
                    "line": 7989,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Closure",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "toArray": {
            "name": "toArray",
            "line": 7999,
            "short_desc": "Get all of the input and files for the request.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "offsetExists": {
            "name": "offsetExists",
            "line": 8010,
            "short_desc": "Determine if the given offset exists.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "offset": {
                    "name": "offset",
                    "line": 8010,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "offsetGet": {
            "name": "offsetGet",
            "line": 8021,
            "short_desc": "Get the value at the given offset.",
            "long_desc": "",
            "hint": [
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "offset": {
                    "name": "offset",
                    "line": 8021,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "offsetSet": {
            "name": "offsetSet",
            "line": 8033,
            "short_desc": "Set the value at the given offset.",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "offset": {
                    "name": "offset",
                    "line": 8033,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "value": {
                    "name": "value",
                    "line": 8033,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "offsetUnset": {
            "name": "offsetUnset",
            "line": 8044,
            "short_desc": "Remove the value at the given offset.",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "offset": {
                    "name": "offset",
                    "line": 8044,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "initialize": {
            "name": "initialize",
            "line": 8062,
            "short_desc": "Sets the parameters for this request.",
            "long_desc": "This method also re-initializes all properties.",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "query": {
                    "name": "query",
                    "line": 8062,
                    "short_desc": "The GET parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "request": {
                    "name": "request",
                    "line": 8062,
                    "short_desc": "The POST parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "attributes": {
                    "name": "attributes",
                    "line": 8062,
                    "short_desc": "The request attributes (parameters parsed from the PATH_INFO, ...)",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "cookies": {
                    "name": "cookies",
                    "line": 8062,
                    "short_desc": "The COOKIE parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "files": {
                    "name": "files",
                    "line": 8062,
                    "short_desc": "The FILES parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "server": {
                    "name": "server",
                    "line": 8062,
                    "short_desc": "The SERVER parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "content": {
                    "name": "content",
                    "line": 8062,
                    "short_desc": "The raw body data",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "resource",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "createFromGlobals": {
            "name": "createFromGlobals",
            "line": 8073,
            "short_desc": "Creates a new request with values from PHP's super globals.",
            "long_desc": "",
            "hint": [
                [
                    "\\Request",
                    false
                ]
            ],
            "hint_desc": "A new request",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "create": {
            "name": "create",
            "line": 8094,
            "short_desc": "Creates a Request based on a given URI and configuration.",
            "long_desc": "The information contained in the URI always take precedence\nover the other information (server and parameters).",
            "hint": [
                [
                    "\\Request",
                    false
                ]
            ],
            "hint_desc": "A Request instance",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "uri": {
                    "name": "uri",
                    "line": 8094,
                    "short_desc": "The URI",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "method": {
                    "name": "method",
                    "line": 8094,
                    "short_desc": "The HTTP method",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "'GET'",
                    "is_by_ref": false
                },
                "parameters": {
                    "name": "parameters",
                    "line": 8094,
                    "short_desc": "The query (GET) or request (POST) parameters",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "cookies": {
                    "name": "cookies",
                    "line": 8094,
                    "short_desc": "The request cookies ($_COOKIE)",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "files": {
                    "name": "files",
                    "line": 8094,
                    "short_desc": "The request files ($_FILES)",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "server": {
                    "name": "server",
                    "line": 8094,
                    "short_desc": "The server parameters ($_SERVER)",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "array()",
                    "is_by_ref": false
                },
                "content": {
                    "name": "content",
                    "line": 8094,
                    "short_desc": "The raw body data",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "setFactory": {
            "name": "setFactory",
            "line": 8109,
            "short_desc": "Sets a callable able to create a Request instance.",
            "long_desc": "This is mainly useful when you need to override the Request class\nto keep BC with an existing system. It should not be used for any\nother purpose.",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "callable": {
                    "name": "callable",
                    "line": 8109,
                    "short_desc": "A PHP callable",
                    "long_desc": null,
                    "hint": [
                        [
                            "callable",
                            false
                        ],
                        [
                            "null",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "overrideGlobals": {
            "name": "overrideGlobals",
            "line": 8122,
            "short_desc": "Overrides the PHP global variables according to this request instance.",
            "long_desc": "It overrides $_GET, $_POST, $_REQUEST, $_SERVER, $_COOKIE.\n$_FILES is never overridden, see rfc1867",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "setTrustedProxies": {
            "name": "setTrustedProxies",
            "line": 8135,
            "short_desc": "Sets a list of trusted proxies.",
            "long_desc": "You should only list the reverse proxies that you manage directly.",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "proxies": {
                    "name": "proxies",
                    "line": 8135,
                    "short_desc": "A list of trusted proxies",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getTrustedProxies": {
            "name": "getTrustedProxies",
            "line": 8146,
            "short_desc": "Gets the list of trusted proxies.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "An array of trusted proxies",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "setTrustedHosts": {
            "name": "setTrustedHosts",
            "line": 8159,
            "short_desc": "Sets a list of trusted host patterns.",
            "long_desc": "You should only list the hosts you manage using regexs.",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "hostPatterns": {
                    "name": "hostPatterns",
                    "line": 8159,
                    "short_desc": "A list of trusted host patterns",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getTrustedHosts": {
            "name": "getTrustedHosts",
            "line": 8170,
            "short_desc": "Gets the list of trusted host patterns.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "An array of trusted host patterns",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "setTrustedHeaderName": {
            "name": "setTrustedHeaderName",
            "line": 8192,
            "short_desc": "Sets the name for trusted headers.",
            "long_desc": "The following header keys are supported:\n\n * Request::HEADER_CLIENT_IP:    defaults to X-Forwarded-For   (see getClientIp())\n * Request::HEADER_CLIENT_HOST:  defaults to X-Forwarded-Host  (see getHost())\n * Request::HEADER_CLIENT_PORT:  defaults to X-Forwarded-Port  (see getPort())\n * Request::HEADER_CLIENT_PROTO: defaults to X-Forwarded-Proto (see getScheme() and isSecure())\n\nSetting an empty value allows to disable the trusted header for the given key.",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\InvalidArgumentException",
                    ""
                ]
            ],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 8192,
                    "short_desc": "The header key",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "value": {
                    "name": "value",
                    "line": 8192,
                    "short_desc": "The header name",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getTrustedHeaderName": {
            "name": "getTrustedHeaderName",
            "line": 8205,
            "short_desc": "Gets the trusted proxy header name.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The header name",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\InvalidArgumentException",
                    ""
                ]
            ],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 8205,
                    "short_desc": "The header key",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "normalizeQueryString": {
            "name": "normalizeQueryString",
            "line": 8220,
            "short_desc": "Normalizes a query string.",
            "long_desc": "It builds a normalized query string, where keys\/value pairs are alphabetized,\nhave consistent escaping and unneeded delimiters are removed.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "A normalized query string for the Request",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "qs": {
                    "name": "qs",
                    "line": 8220,
                    "short_desc": "Query string",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "enableHttpMethodParameterOverride": {
            "name": "enableHttpMethodParameterOverride",
            "line": 8238,
            "short_desc": "Enables support for the _method request parameter to determine the intended HTTP method.",
            "long_desc": "Be warned that enabling this feature might lead to CSRF issues in your code.\nCheck that you are using CSRF tokens when required.\nIf the HTTP method parameter override is enabled, an html-form with method \"POST\" can be altered\nand used to send a \"PUT\" or \"DELETE\" request via the _method request parameter.\nIf these methods are not protected against CSRF, this presents a possible vulnerability.\n\nThe HTTP method can only be overridden when the real HTTP method is POST.",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getHttpMethodParameterOverride": {
            "name": "getHttpMethodParameterOverride",
            "line": 8249,
            "short_desc": "Checks whether support for the _method request parameter is enabled.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "True when the _method request parameter is enabled, false otherwise",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "get": {
            "name": "get",
            "line": 8268,
            "short_desc": "Gets a \"parameter\" value from any bag.",
            "long_desc": "This method is mainly useful for libraries that want to provide some flexibility. If you don't need the\nflexibility in controllers, it is better to explicitly get request parameters from the appropriate\npublic property instead (attributes, query, request).\n\nOrder of precedence: PATH (routing placeholders or custom attributes), GET, BODY",
            "hint": [
                [
                    "mixed",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "key": {
                    "name": "key",
                    "line": 8268,
                    "short_desc": "the key",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "default": {
                    "name": "default",
                    "line": 8268,
                    "short_desc": "the default value if the parameter key does not exist",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "getSession": {
            "name": "getSession",
            "line": 8279,
            "short_desc": "Gets the Session.",
            "long_desc": "",
            "hint": [
                [
                    "\\Symfony\\Component\\HttpFoundation\\SessionInterface",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "The session",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "hasPreviousSession": {
            "name": "hasPreviousSession",
            "line": 8291,
            "short_desc": "Whether the request contains a Session which was started in one of the\nprevious requests.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "hasSession": {
            "name": "hasSession",
            "line": 8306,
            "short_desc": "Whether the request contains a Session object.",
            "long_desc": "This method does not give any information about the state of the session object,\nlike whether the session is started or not. It is just a way to check if this Request\nis associated with a Session instance.",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "true when the Request contains a Session object, false otherwise",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "setSession": {
            "name": "setSession",
            "line": 8317,
            "short_desc": "Sets the Session.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "session": {
                    "name": "session",
                    "line": 8317,
                    "short_desc": "The Session",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Symfony\\Component\\HttpFoundation\\SessionInterface",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getClientIps": {
            "name": "getClientIps",
            "line": 8335,
            "short_desc": "Returns the client IP addresses.",
            "long_desc": "In the returned array the most trusted IP address is first, and the\nleast trusted one last. The \"real\" client IP address is the last one,\nbut this is also the least trusted one. Trusted proxies are stripped.\n\nUse this method carefully; you should use getClientIp() instead.",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "The client IP addresses",
            "tags": {
                "see": [
                    [
                        "getClientIp()"
                    ]
                ],
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getClientIp": {
            "name": "getClientIp",
            "line": 8358,
            "short_desc": "Returns the client IP address.",
            "long_desc": "This method can read the client IP address from the \"X-Forwarded-For\" header\nwhen trusted proxies were set via \"setTrustedProxies()\". The \"X-Forwarded-For\"\nheader value is a comma+space separated list of IP addresses, the left-most\nbeing the original client, and each successive proxy that passed the request\nadding the IP address where it received the request from.\n\nIf your reverse proxy uses a different header name than \"X-Forwarded-For\",\n(\"Client-Ip\" for instance), configure it via \"setTrustedHeaderName()\" with\nthe \"client-ip\" key.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The client IP address",
            "tags": {
                "see": [
                    [
                        "getClientIps()"
                    ],
                    [
                        "http:\/\/en.wikipedia.org\/wiki\/X-Forwarded-For"
                    ]
                ],
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getScriptName": {
            "name": "getScriptName",
            "line": 8369,
            "short_desc": "Returns current script name.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getPathInfo": {
            "name": "getPathInfo",
            "line": 8389,
            "short_desc": "Returns the path being requested relative to the executed script.",
            "long_desc": "The path info always starts with a \/.\n\nSuppose this request is instantiated from \/mysite on localhost:\n\n * http:\/\/localhost\/mysite              returns an empty string\n * http:\/\/localhost\/mysite\/about        returns '\/about'\n * http:\/\/localhost\/mysite\/enco%20ded   returns '\/enco%20ded'\n * http:\/\/localhost\/mysite\/about?var=1  returns '\/about'",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The raw path (i.e. not urldecoded)",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getBasePath": {
            "name": "getBasePath",
            "line": 8407,
            "short_desc": "Returns the root path from which this request is executed.",
            "long_desc": "Suppose that an index.php file instantiates this request object:\n\n * http:\/\/localhost\/index.php         returns an empty string\n * http:\/\/localhost\/index.php\/page    returns an empty string\n * http:\/\/localhost\/web\/index.php     returns '\/web'\n * http:\/\/localhost\/we%20b\/index.php  returns '\/we%20b'",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The raw path (i.e. not urldecoded)",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getBaseUrl": {
            "name": "getBaseUrl",
            "line": 8423,
            "short_desc": "Returns the root URL from which this request is executed.",
            "long_desc": "The base URL never ends with a \/.\n\nThis is similar to getBasePath(), except that it also includes the\nscript filename (e.g. index.php) if one exists.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The raw URL (i.e. not urldecoded)",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getScheme": {
            "name": "getScheme",
            "line": 8434,
            "short_desc": "Gets the request's scheme.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getPort": {
            "name": "getPort",
            "line": 8453,
            "short_desc": "Returns the port on which the request is made.",
            "long_desc": "This method can read the client port from the \"X-Forwarded-Port\" header\nwhen trusted proxies were set via \"setTrustedProxies()\".\n\nThe \"X-Forwarded-Port\" header must contain the client port.\n\nIf your reverse proxy uses a different header name than \"X-Forwarded-Port\",\nconfigure it via \"setTrustedHeaderName()\" with the \"client-port\" key.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getUser": {
            "name": "getUser",
            "line": 8464,
            "short_desc": "Returns the user.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getPassword": {
            "name": "getPassword",
            "line": 8475,
            "short_desc": "Returns the password.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getUserInfo": {
            "name": "getUserInfo",
            "line": 8486,
            "short_desc": "Gets the user info.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "A user name and, optionally, scheme-specific information about how to gain authorization to access the server",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getHttpHost": {
            "name": "getHttpHost",
            "line": 8499,
            "short_desc": "Returns the HTTP host being requested.",
            "long_desc": "The port name will be appended to the host if it's non-standard.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getRequestUri": {
            "name": "getRequestUri",
            "line": 8510,
            "short_desc": "Returns the requested URI (path and query string).",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The raw URI (i.e. not URI decoded)",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getSchemeAndHttpHost": {
            "name": "getSchemeAndHttpHost",
            "line": 8524,
            "short_desc": "Gets the scheme and HTTP host.",
            "long_desc": "If the URL was called with basic authentication, the user\nand the password are not added to the generated string.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The scheme and HTTP host",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getUri": {
            "name": "getUri",
            "line": 8536,
            "short_desc": "Generates a normalized URI (URL) for the Request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "A normalized URI (URL) for the Request",
            "tags": {
                "see": [
                    [
                        "getQueryString()"
                    ]
                ],
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getUriForPath": {
            "name": "getUriForPath",
            "line": 8548,
            "short_desc": "Generates a normalized URI for the given path.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The normalized URI for the path",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "path": {
                    "name": "path",
                    "line": 8548,
                    "short_desc": "A path to use instead of the current one",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getRelativeUriForPath": {
            "name": "getRelativeUriForPath",
            "line": 8572,
            "short_desc": "Returns the path as relative reference from the current Request path.",
            "long_desc": "Only the URIs path component (no schema, host etc.) is relevant and must be given.\nBoth paths must be absolute and not contain relative parts.\nRelative URLs from one resource to another are useful when generating self-contained downloadable document archives.\nFurthermore, they can be used to reduce the link size in documents.\n\nExample target paths, given a base path of \"\/a\/b\/c\/d\":\n- \"\/a\/b\/c\/d\"     -> \"\"\n- \"\/a\/b\/c\/\"      -> \".\/\"\n- \"\/a\/b\/\"        -> \"..\/\"\n- \"\/a\/b\/c\/other\" -> \"other\"\n- \"\/a\/x\/y\"       -> \"..\/..\/x\/y\"",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The relative target path",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "path": {
                    "name": "path",
                    "line": 8572,
                    "short_desc": "The target path",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getQueryString": {
            "name": "getQueryString",
            "line": 8586,
            "short_desc": "Generates the normalized query string for the Request.",
            "long_desc": "It builds a normalized query string, where keys\/value pairs are alphabetized\nand have consistent escaping.",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "A normalized query string for the Request",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "isSecure": {
            "name": "isSecure",
            "line": 8606,
            "short_desc": "Checks whether the request is secure or not.",
            "long_desc": "This method can read the client protocol from the \"X-Forwarded-Proto\" header\nwhen trusted proxies were set via \"setTrustedProxies()\".\n\nThe \"X-Forwarded-Proto\" header must contain the protocol: \"https\" or \"http\".\n\nIf your reverse proxy uses a different header name than \"X-Forwarded-Proto\"\n(\"SSL_HTTPS\" for instance), configure it via \"setTrustedHeaderName()\" with\nthe \"client-proto\" key.",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getHost": {
            "name": "getHost",
            "line": 8626,
            "short_desc": "Returns the host name.",
            "long_desc": "This method can read the client host name from the \"X-Forwarded-Host\" header\nwhen trusted proxies were set via \"setTrustedProxies()\".\n\nThe \"X-Forwarded-Host\" header must contain the client host name.\n\nIf your reverse proxy uses a different header name than \"X-Forwarded-Host\",\nconfigure it via \"setTrustedHeaderName()\" with the \"client-host\" key.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\UnexpectedValueException",
                    "when the host name is invalid"
                ]
            ],
            "errors": [],
            "parameters": []
        },
        "setMethod": {
            "name": "setMethod",
            "line": 8637,
            "short_desc": "Sets the request method.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "method": {
                    "name": "method",
                    "line": 8637,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getMethod": {
            "name": "getMethod",
            "line": 8657,
            "short_desc": "Gets the request \"intended\" method.",
            "long_desc": "If the X-HTTP-Method-Override header is set, and if the method is a POST,\nthen it is used to determine the \"real\" intended HTTP method.\n\nThe _method request parameter can also be used to determine the HTTP method,\nbut only if enableHttpMethodParameterOverride() has been called.\n\nThe method is always an uppercased string.",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The request method",
            "tags": {
                "see": [
                    [
                        "getRealMethod()"
                    ]
                ],
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getRealMethod": {
            "name": "getRealMethod",
            "line": 8669,
            "short_desc": "Gets the \"real\" request method.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The request method",
            "tags": {
                "see": [
                    [
                        "getMethod()"
                    ]
                ],
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getMimeType": {
            "name": "getMimeType",
            "line": 8681,
            "short_desc": "Gets the mime type associated with the format.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The associated mime type (null if not found)",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "format": {
                    "name": "format",
                    "line": 8681,
                    "short_desc": "The format",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getMimeTypes": {
            "name": "getMimeTypes",
            "line": 8693,
            "short_desc": "Gets the mime types associated with the format.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "The associated mime types",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "format": {
                    "name": "format",
                    "line": 8693,
                    "short_desc": "The format",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getFormat": {
            "name": "getFormat",
            "line": 8705,
            "short_desc": "Gets the format associated with the mime type.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "The format (null if not found)",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "mimeType": {
                    "name": "mimeType",
                    "line": 8705,
                    "short_desc": "The associated mime type",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "setFormat": {
            "name": "setFormat",
            "line": 8717,
            "short_desc": "Associates a format with mime types.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "format": {
                    "name": "format",
                    "line": 8717,
                    "short_desc": "The format",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "mimeTypes": {
                    "name": "mimeTypes",
                    "line": 8717,
                    "short_desc": "The associated mime types (the preferred one must be the first as it will be used as the content type)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ],
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getRequestFormat": {
            "name": "getRequestFormat",
            "line": 8735,
            "short_desc": "Gets the request format.",
            "long_desc": "Here is the process to determine the format:\n\n * format defined by the user (with setRequestFormat())\n * _format request attribute\n * $default",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "The request format",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "default": {
                    "name": "default",
                    "line": 8735,
                    "short_desc": "The default format",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "'html'",
                    "is_by_ref": false
                }
            }
        },
        "setRequestFormat": {
            "name": "setRequestFormat",
            "line": 8746,
            "short_desc": "Sets the request format.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "format": {
                    "name": "format",
                    "line": 8746,
                    "short_desc": "The request format",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getContentType": {
            "name": "getContentType",
            "line": 8757,
            "short_desc": "Gets the format associated with the request.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "The format (null if no content type is present)",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "setDefaultLocale": {
            "name": "setDefaultLocale",
            "line": 8768,
            "short_desc": "Sets the default locale.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "locale": {
                    "name": "locale",
                    "line": 8768,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getDefaultLocale": {
            "name": "getDefaultLocale",
            "line": 8779,
            "short_desc": "Get the default locale.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "setLocale": {
            "name": "setLocale",
            "line": 8790,
            "short_desc": "Sets the locale.",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "locale": {
                    "name": "locale",
                    "line": 8790,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "getLocale": {
            "name": "getLocale",
            "line": 8801,
            "short_desc": "Get the locale.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "isMethod": {
            "name": "isMethod",
            "line": 8813,
            "short_desc": "Checks if the request method is of specified type.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "method": {
                    "name": "method",
                    "line": 8813,
                    "short_desc": "Uppercase request method (GET, POST etc)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "isMethodSafe": {
            "name": "isMethodSafe",
            "line": 8824,
            "short_desc": "Checks whether the method is safe or not.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getContent": {
            "name": "getContent",
            "line": 8837,
            "short_desc": "Returns the request body content.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "resource",
                    false
                ]
            ],
            "hint_desc": "The request body content or a resource to read the body stream",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\LogicException",
                    ""
                ]
            ],
            "errors": [],
            "parameters": {
                "asResource": {
                    "name": "asResource",
                    "line": 8837,
                    "short_desc": "If true, a resource will be returned",
                    "long_desc": null,
                    "hint": [
                        [
                            "bool",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "false",
                    "is_by_ref": false
                }
            }
        },
        "getETags": {
            "name": "getETags",
            "line": 8848,
            "short_desc": "Gets the Etags.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "The entity tags",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "isNoCache": {
            "name": "isNoCache",
            "line": 8859,
            "short_desc": "",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getPreferredLanguage": {
            "name": "getPreferredLanguage",
            "line": 8871,
            "short_desc": "Returns the preferred language.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ],
                [
                    "null",
                    false
                ]
            ],
            "hint_desc": "The preferred locale",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "locales": {
                    "name": "locales",
                    "line": 8871,
                    "short_desc": "An array of ordered available locales",
                    "long_desc": null,
                    "hint": [
                        [
                            "array",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": "null",
                    "is_by_ref": false
                }
            }
        },
        "getLanguages": {
            "name": "getLanguages",
            "line": 8882,
            "short_desc": "Gets a list of languages acceptable by the client browser.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "Languages ordered in the user browser preferences",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getCharsets": {
            "name": "getCharsets",
            "line": 8893,
            "short_desc": "Gets a list of charsets acceptable by the client browser.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "List of charsets in preferable order",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getEncodings": {
            "name": "getEncodings",
            "line": 8904,
            "short_desc": "Gets a list of encodings acceptable by the client browser.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "List of encodings in preferable order",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getAcceptableContentTypes": {
            "name": "getAcceptableContentTypes",
            "line": 8915,
            "short_desc": "Gets a list of content types acceptable by the client browser.",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "List of content types in preferable order",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "isXmlHttpRequest": {
            "name": "isXmlHttpRequest",
            "line": 8930,
            "short_desc": "Returns true if the request is a XMLHttpRequest.",
            "long_desc": "It works if your JavaScript library sets an X-Requested-With HTTP header.\nIt is known to work with common JavaScript frameworks:",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "true if the request is an XMLHttpRequest, false otherwise",
            "tags": {
                "link": [
                    [
                        "http:\/\/en.wikipedia.org\/wiki\/List_of_Ajax_frameworks#JavaScript"
                    ]
                ],
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "isFromTrustedProxy": {
            "name": "isFromTrustedProxy",
            "line": 8944,
            "short_desc": "Indicates whether this request originated from a trusted proxy.",
            "long_desc": "This can be useful to determine whether or not to trust the\ncontents of a proxy-specific header.",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "true if the request came from a trusted proxy, false otherwise",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "macro": {
            "name": "macro",
            "line": 8957,
            "short_desc": "Register a custom macro.",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "name": {
                    "name": "name",
                    "line": 8957,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                },
                "macro": {
                    "name": "macro",
                    "line": 8957,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "callable",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        },
        "hasMacro": {
            "name": "hasMacro",
            "line": 8968,
            "short_desc": "Checks if macro is registered.",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": {
                "static": [
                    [
                        ""
                    ]
                ]
            },
            "modifiers": "9",
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "name": {
                    "name": "name",
                    "line": 8968,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": "",
                    "default": null,
                    "is_by_ref": false
                }
            }
        }
    },
    "constants": []
}